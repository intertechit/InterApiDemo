export interface IAccount {
    isBlockedAccount?: boolean;
    blockageType?: string;
    isPartialBlockedAccount?: boolean;
    isAggregatedAccount?: boolean;
    accountSuffix?: number;
    branchCode?: number;
    customerNo?: number;
    productCode?: string;
    originalProductCode?: string;
    projectCode?: string;
    shortName?: string;
    isClosed?: boolean;
    isDisplayedOnInternet?: boolean;
    isAutoInvested?: boolean;
    currencyCode?: string;
    analysisCode?: string;
    receivableInterestRate?: number;
    debtInterestRate?: number;
    amountOfBalance?: number;
    amountOfBalanceGross?: number;
    availableCaptainBalance?: number;
    availableBalance?: number;
    availableBalanceGross?: number;
    previousDateBalanceGross?: number;
    isPersonnelAccount?: boolean;
    accountName?: string;
    ibanNo?: string;
    captainAccountFundBalance?: number;
    captainAccountBalance?: number;
    availableCreditDepositBalance?: number;
    captainAccountFlag?: boolean;
    valueDate?: string;
    maturityDate?: string;
    accountClosingDate?: string;
    accountClosingUserCode?: string;
    accountOpenningDate?: string;
    accountOpenningUserCode?: string;
    reverseBalancePositionFlag?: string;
    cdaFlag?: string;
    blockageCodeName?: string;
    blockageName?: string;
    blockageReasonCode?: string;
    blockageReasonCodeName?: string;
    blockageExplanation?: string;
    blockageUserCode?: string;
    blockageAmount?: number;
    blockageMaturityDate?: string;
    blockageValueDate?: string;
    previousDateBalance?: number;
    totalPartialBlockageAmount?: number;
    debitAccuredInterestAmountForKMH?: number;
    captainAvailableBalance?: number;
    hasSchoolPayment?: string;
    availableCreditDeposit?: number;
    batchDate?: string;
    delayCount?: number;
    minPaymentAmount?: number;
    lastPaymentDate?: string;
    debitAccruedInterestAmount?: number;
    dayToMaturity?: number;
    creditInterestRate?: number;
    netInterestAmount?: number;
    creditAccruedInterestAmount?: number;
    rollType?: string;
    isSuitableForIncomeAndOut?: boolean;
    isPos?: boolean;
    cdaCashSuffix?: number;
    cdaLimit?: number;
    cdaAvailableLimit?: number;
    isDormantAccount?: boolean;
}

